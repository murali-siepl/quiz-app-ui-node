{"version":3,"sources":["firebase/firebase.js","screens/LoadingScreen/LoadingScreen.js","screens/Home/Home.js","screens/OneTimeDashboard/OneTimeDashboard.js","components/AddQuestionModal/AddQuestionModal.js","components/QuestionsTable.js","screens/CreateQuiz/CreateQuiz.js","screens/JoinQuiz/JoinQuiz.js","components/QuizCard/CreatedQuizCard.js","components/QuizCard/JoinedQuizCard.js","screens/UserDashboard/UserDashboard.js","screens/CreatedSuccesfully/CreatedSuccesfully.js","screens/NotFoundPage.js","screens/Attempted/AttemptedModal.js","screens/Attempted/AttemptQuiz.js","components/Sidebar/Sidebar.js","components/Appbar/Appbar.js","components/ResponsesTable.js","screens/Response/Responses.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","LoadingScreen","className","style","fontSize","color","width","height","type","Home","setUser","useState","loading","setLoading","uiConfig","signInflow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","useEffect","isMounted","onAuthStateChanged","user","uid","currentUser","name","displayName","email","console","log","id","borderRadius","firebaseAuth","OneTimeDashboard","path","setPath","length","push","to","onClick","viewBox","xmlns","fill","d","transform","useStyles","makeStyles","theme","root","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","outline","buttons","AddQuestionModal","title","opType","opArray","index","addQuestionHandle","classes","React","open","setOpen","optionType","setOptionType","optionsArray","setOptionsArray","editedOption","setEditedOption","editOpIndex","setEditOpIndex","titleField","setTitleField","trueOrFalse","settrueOrFalse","optionsRef","useRef","checkBoxRef","handleOpen","IconButton","EditRounded","Modal","aria-labelledby","aria-describedby","disableEnforceFocus","autoFocus","value","onChange","e","target","placeholder","selectedIndex","alert","map","option","ind","disabled","checked","isCorrect","text","Icon","temp","saveEdited","SaveRounded","handleEdit","splice","deleteHandler","DeleteRounded","ref","current","arr","findIndex","op","forEach","variant","tempArr","filter","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","secondary","main","lighten","light","primary","dark","flex","EnhancedTableToolbar","selected","setSelected","questionArray","setQuestionArray","Toolbar","clsx","Typography","component","element","aria-label","Delete","margin","marginBottom","table","minWidth","border","clip","overflow","position","top","QuestionsTable","rows","question","options","choice","setOrder","setOrderBy","page","setPage","editQuestionHandle","emptyRows","Math","min","Paper","TableContainer","Table","size","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","newSelected","concat","handleClick","scope","colSpan","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","CreateQuiz","quizTitle","questions","isOpen","editQuizHandle","setTitle","access","setAccesss","quizCode","setQuizCode","createQuiz","fetch","method","body","JSON","stringify","headers","result","json","quizId","autocomplete","Switch","JoinQuiz","valid","setValid","code","setCode","handleJoinQuiz","fontweight","onKeyPress","key","CreatedQuizCard","responses","setEditQuiz","fontWeight","JoinedQuizCard","score","UserDashboard","createdQuizzes","setCreatedQuizzes","attemptedQuizzes","setAttemptedQuizzes","editQuiz","results","quizData","createdQuiz","attemptedQuiz","fetchQuizData","dir","_id","requestOptions","then","response","isJson","get","includes","submitData","ok","error","message","status","Promise","reject","catch","quiz","totalQuestions","CreatedSuccesfully","match","Copy","setCopy","params","onCopy","NotFoundPage","textAlign","AttemptedModal","totalScore","showModal","AttemptQuiz","setQuestions","attemptedQuestions","setAttemptedQuestions","setQuizTitle","setResult","setShowModal","res","selectedOptions","fetchQuiz","handleOptionSelect","i","submitQuiz","Sidebar","signOut","setSignOut","SidedbarData","icon","Dashboard","CName","MeetingRoom","CreateNewFolder","sidebar","setSidebar","showSidebar","MenuRounded","MenuOpenRounded","item","ExitToApp","Appbar","AccountCircle","StyledTableCell","withStyles","head","common","white","StyledTableRow","action","ResponsesTable","resp","Responses","setResponses","finalResponse","getResponses","App","metadata","lastSignInTime","creationTime","createUserInDB","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gdAYAA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBR,IAASS,YACTT,IAASU,OAEMV,QAAf,E,gECEeW,EAdO,WACpB,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAIA,UAAU,OAAOC,MAAO,CAAEC,SAAU,QAAxC,UACE,qCADF,SAIA,cAAC,IAAD,CAAQC,MAAM,UAAUC,MAAO,IAAKC,OAAQ,IAAKC,KAAK,qBC6D7CC,EAlEF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACIC,EAAW,CACbC,WAAY,QACZC,cAAe,CACb1B,EAASU,KAAKiB,mBAAmBC,YACjC5B,EAASU,KAAKmB,qBAAqBD,YACnC5B,EAASU,KAAKoB,kBAAkBF,aAElCG,UAAW,CACTC,4BAA6B,kBAAM,KAuBvC,OApBAC,qBAAU,WACR,IAAIC,GAAY,EAiBhB,OAhBAlC,EAASU,OAAOyB,oBAAmB,SAACC,GAE9BA,GAAQF,GACVd,EAAQ,CACNiB,IAAKrC,EAASU,OAAO4B,YAAYD,IACjCE,KAAMvC,EAASU,OAAO4B,YAAYE,YAClCC,MAAOzC,EAASU,OAAO4B,YAAYG,QAErCC,QAAQC,IAAI,oBAEZD,QAAQC,IAAI,mBACZvB,EAAQ,KAEVsB,QAAQC,IAAI,eACRT,GAAWX,GAAW,MAErB,kBAAOW,GAAY,KACzB,CAACd,IAEF,mCACGE,EACC,cAAC,EAAD,IAEA,sBAAKsB,GAAG,OAAR,UACE,sBAAKA,GAAG,OAAR,UACE,qBAAKA,GAAG,YAAR,SACE,2CAEF,qBAAKA,GAAG,cAAR,6LAOF,sBAAKA,GAAG,aAAR,UACE,uBAAOhC,UAAU,cAAjB,SACE,oCAEF,cAAC,qBAAD,CACEiC,aAAa,OACbrB,SAAUA,EACVsB,aAAc9C,EAASU,kBCHtBqC,G,OAxDU,SAAC,GAAa,EAAXX,KAAY,IACtC,EAAwBf,mBAAS,IAAjC,mBAAO2B,EAAP,KAAaC,EAAb,KAMA,OAAID,EAAKE,OAAS,EAAU,cAAC,IAAD,CAAUC,MAAI,EAACC,GAAIJ,IAG7C,qBAAKpC,UAAU,qBAAf,SACE,sBAAKgC,GAAG,oBAAR,UACE,sBAAKhC,UAAU,YAAf,UACE,qBAAIA,UAAU,QAAd,UACE,qCADF,SAGA,wBAAQA,UAAU,yBAAyByC,QAb/B,kBAAMJ,EAAQ,eAa1B,uBAGA,wBAAQrC,UAAU,yBAAyByC,QAf9B,kBAAMJ,EAAQ,iBAe3B,yBAGA,wBAAQrC,UAAU,yBAAyByC,QAjBhC,kBAAMJ,EAAQ,eAiBzB,0BAIF,sBAAKrC,UAAU,WAAf,UACE,qBACEA,UAAU,SACV0C,QAAQ,cACRC,MAAM,6BAHR,SAKE,sBACEC,KAAK,UACLC,EAAE,sSACFC,UAAU,yBAId,qBACE9C,UAAU,SACV0C,QAAQ,cACRC,MAAM,6BAHR,SAKE,sBACEC,KAAK,UACLC,EAAE,+SACFC,UAAU,mC,yFC7ClBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GAGNC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBP,EAAMQ,QAAQC,WAAWH,MAC1CI,UAAWV,EAAMW,QAAQ,GACzBC,QAASZ,EAAMa,QAAQ,EAAG,EAAG,GAC7BC,QAAS,EACT3D,MAAO,MACP6B,aAAc,QAEhB+B,QAAS,CACPZ,QAAS,OACTE,eAAgB,gBAIL,SAASW,EAAT,GAQX,IAAD,IAPD3D,YAOC,MAPM,MAON,MAND4D,aAMC,MANO,GAMP,MALDC,cAKC,MALQ,QAKR,EAJDC,EAIC,EAJDA,QAIC,IAHDC,aAGC,OAHQ,EAGR,EADDC,EACC,EADDA,kBAEMC,EAAUxB,IAChB,EAAwByB,IAAM/D,UAAS,GAAvC,mBAAOgE,EAAP,KAAaC,EAAb,KACA,EAAoCjE,mBAAS,SAA7C,mBAAOkE,EAAP,KAAmBC,EAAnB,KACA,EAAwCnE,mBAAS,IAAjD,mBAAOoE,EAAP,KAAqBC,EAArB,KACA,EAAwCrE,mBAAS,MAAjD,mBAAOsE,EAAP,KAAqBC,EAArB,KACA,EAAsCvE,oBAAU,GAAhD,mBAAOwE,EAAP,KAAoBC,EAApB,KACA,EAAoCzE,mBAAS,IAA7C,mBAAO0E,EAAP,KAAmBC,EAAnB,KACA,EAAqC3E,mBAAS,GAA9C,mBAAO4E,EAAP,KAAmBC,EAAnB,KACMC,EAAaC,iBAAO,MACpBC,EAAcD,iBAAO,MAE3BnE,qBAAU,WACJoD,GACFW,EAAclB,GACdU,EAAcT,GACVC,GAASU,EAAgBV,KAE7BgB,EAAc,IACdN,EAAgB,IAChBF,EAAc,YAEf,CAACH,EAAMP,EAAOC,EAAQC,IACzB,IAAMsB,GAAa,WACjBhB,GAAQ,IAyGV,OACE,sBAAK1E,UAAWuE,EAAQrB,KAAxB,UACY,QAAT5C,EACC,wBAAQN,UAAU,SAASyC,QAASiD,GAApC,0BAIA,cAACC,EAAA,EAAD,CAAYlD,QAASiD,GAArB,SACE,cAACE,EAAA,EAAD,MAGJ,cAACC,EAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjB/F,UAAWuE,EAAQpB,MACnBsB,KAAMA,EACNuB,qBAAqB,EALvB,SAOE,sBAAKhG,UAAWuE,EAAQhB,MAAxB,UACE,sBAAKvD,UAAU,eAAf,UACE,qBAAKgC,GAAG,QAAR,uBACA,uBACE1B,KAAK,OACL2F,WAAS,EACTC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAOhB,EAAcgB,EAAEC,OAAOH,QACxClG,UAAU,sBACVsG,YAAY,uBAEd,yBACEtE,GAAG,SACHsE,YAAY,SACZH,SA9Da,SAACC,GACxBtE,QAAQC,IAAIqE,EAAEC,OAAOE,eACS,IAA3BH,EAAEC,OAAOE,gBACTjB,EAAe,GAChBkB,MAAMnB,IAERT,EAAcwB,EAAEC,OAAOH,QAqDf,UAKE,wBAAQlG,UAAU,WAAWkG,MAAM,QAAnC,2BAGA,wBAAQlG,UAAU,WAAWkG,MAAM,QAAnC,8BAGA,wBAAQlG,UAAU,WAAWkG,MAAM,QAAnC,8BAKF,qBAAKlG,UAAU,aAAf,SACE,qBAAKA,UAAU,UAAUgC,GAAG,SAA5B,SACG6C,EAAa4B,KAAI,SAACC,EAAQC,GAAT,OAChB,sBAAK3G,UAAU,SAAf,UACE,uBACEM,KAAqB,UAAfqE,EAAyB,QAAU,WACzCiC,UAAU,EACV5G,UAAU,WACV2B,KAAK,SACLkF,QAASH,EAAOI,YAEjB7B,IAAgB0B,EACf,uBACET,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOpB,EAAgBoB,EAAEC,OAAOH,UAG5C,qBAAKlG,UAAU,SAAf,SAAyB0G,EAAOK,OAEjC9B,IAAgB0B,EACf,cAACK,EAAA,EAAD,CAAMhH,UAAU,YAAYyC,QAAS,kBAxEtC,WACjB,IAAMwE,EAAI,YAAOpC,GACjBoC,EAAKhC,GAAa8B,KAAOhC,EACzBD,EAAgBmC,GAChB/B,GAAgB,GAoE6CgC,IAA3C,SACE,cAACC,EAAA,EAAD,MAGF,cAACH,EAAA,EAAD,CACEhH,UAAU,YACVyC,QAAS,kBArFZ,SAACkE,IACG,IAAjB1B,IACFC,EAAeyB,GACf3B,EAAgBH,EAAa8B,GAAKI,OAkFDK,CAAWT,IAF5B,SAIE,cAACf,EAAA,EAAD,MAGJ,cAACoB,EAAA,EAAD,CACEhH,UAAU,cACVyC,QAAS,YAnGP,SAACkE,GACrB,IAAMM,EAAI,YAAOpC,GACjBoC,EAAKI,OAAOV,EAAK,GACjB7B,EAAgBmC,GAChB/B,GAAgB,GAgGIoC,CAAcX,IAHlB,SAME,cAACY,EAAA,EAAD,QAlCyBZ,UAyCnC,sBAAK3G,UAAU,SAAf,UACE,gCACE,uBACEM,KAAqB,UAAfqE,EAAyB,QAAU,WACzC6C,IAAK/B,EACLzF,UAAU,WACV2B,KAAK,WAEP,uBACErB,KAAK,OACLkH,IAAKjC,EACLvF,UAAU,qBACVsG,YAAW,iBAAYzB,EAAavC,OAAS,QAGjD,uBACEhC,KAAK,SACLN,UAAU,UACVkG,MAAM,QACNzD,QAnKI,WAEhB,GADAX,QAAQC,IAAIwD,GAC4B,IAApCA,EAAWkC,QAAQvB,MAAM5D,OAA7B,CAEA,IAAMoF,EAAG,YAAO7C,IAGb,IADDA,EAAa8C,WAAU,SAACC,GAAD,OAAQA,EAAGb,OAASxB,EAAWkC,QAAQvB,UAM7C,UAAfvB,GAA0Bc,EAAYgC,QAAQZ,SAEhDa,EAAIG,SAAQ,SAACD,GAAD,OAASA,EAAGd,WAAY,KAEtCY,EAAInF,KAAK,CACPwE,KAAMxB,EAAWkC,QAAQvB,MACzBY,UAAWrB,EAAYgC,QAAQZ,UAEjCtB,EAAWkC,QAAQvB,MAAQ,GAC3BT,EAAYgC,QAAQZ,SAAU,EAE9B/B,EAAgB4C,IAddlB,MAAM,oCA8JF,sBAAKxG,UAAWuE,EAAQP,QAAxB,UACE,wBAAQhE,UAAU,UAAUyC,QAvNlB,WAClBiC,GAAQ,IAsNA,mBAGA,yBAEE1E,UAAU,SACVG,MAAM,YACN2H,QAAQ,YACRrF,QA5NgB,WAC1B,IAAMsF,EAAO,YAAOlD,GAED,IAAhBQ,GACK0C,GAAWA,EAAQzF,OAAS,EAC9BkE,MAAM,4CAO4B,IAApCjB,EAAWkC,QAAQvB,MAAM5D,SAER,UAAfqC,GAA0Bc,EAAYgC,QAAQZ,SAChDkB,EAAQF,SAAQ,SAACD,GAAD,OAASA,EAAGd,WAAY,KAE1CiB,EAAQxF,KAAK,CACXwE,KAAMxB,EAAWkC,QAAQvB,MACzBY,UAAWrB,EAAYgC,QAAQZ,YAI9B1B,EAAW7C,QAAUuC,EAAavC,OAAS,EAC9CkE,MAAM,8CAEIrB,EAAW7C,OAGZuC,EAAavC,OAAS,EAC/BkE,MAAM,6CAGU3B,EAAamD,QAAO,SAACJ,GAAD,OAAQA,EAAGd,aACnCxE,OAAS,EACrBkE,MAAM,qCAGO,IAAXnC,EAAcC,EAAkBa,EAAYR,EAAYoD,EAAS1D,GAChEC,EAAkBa,EAAYR,EAAYoD,GAE/CrD,GAAQ,IAdN8B,MAAM,0BA4LA,UAOY,QAATlG,EAAiB,OAAS,QAP7B,yB,gJClQZ,SAAS2H,EAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,EAGT,SAASC,EAAcC,EAAOF,GAC5B,MAAiB,SAAVE,EACH,SAACJ,EAAGC,GAAJ,OAAUF,EAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,EAAqBC,EAAGC,EAAGC,IAG5C,SAASG,EAAWC,EAAOC,GACzB,IAAMC,EAAiBF,EAAM/B,KAAI,SAACkC,EAAItE,GAAL,MAAe,CAACsE,EAAItE,MAMrD,OALAqE,EAAeE,MAAK,SAACV,EAAGC,GACtB,IAAMG,EAAQG,EAAWP,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVG,EAAoBA,EACjBJ,EAAE,GAAKC,EAAE,MAEXO,EAAejC,KAAI,SAACkC,GAAD,OAAQA,EAAG,MAGvC,IAAME,EAAY,CAChB,CACE7G,GAAI,QACJ8G,SAAS,EACTC,gBAAgB,EAChBC,MAAO,YAET,CAAEhH,GAAI,UAAW8G,SAAS,EAAMC,gBAAgB,EAAOC,MAAO,WAC9D,CAAEhH,GAAI,SAAU8G,SAAS,EAAMC,gBAAgB,EAAOC,MAAO,UAC7D,CAAEhH,GAAI,OAAQ8G,SAAS,EAAMC,gBAAgB,EAAOC,MAAO,SAG7D,SAASC,EAAkBC,GACzB,IACE3E,EAOE2E,EAPF3E,QACA4E,EAMED,EANFC,iBACAb,EAKEY,EALFZ,MACAF,EAIEc,EAJFd,QACAgB,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,SACAC,EACEJ,EADFI,cAMF,OACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW5F,QAAQ,WAAnB,SACE,cAAC6F,EAAA,EAAD,CACEC,cAAeP,EAAc,GAAKA,EAAcC,EAChDxC,QAASwC,EAAW,GAAKD,IAAgBC,EACzClD,SAAUgD,EACVS,WAAY,CAAE,aAAc,2BAG/Bf,EAAUpC,KAAI,SAACoD,GAAD,OACb,cAACJ,EAAA,EAAD,CAEEK,MAAOD,EAASf,QAAU,QAAU,OACpCjF,QAASgG,EAASd,eAAiB,OAAS,UAC5CgB,cAAe3B,IAAYyB,EAAS7H,IAAKsG,EAJ3C,SAME,eAAC0B,EAAA,EAAD,CACEC,OAAQ7B,IAAYyB,EAAS7H,GAC7BkI,UAAW9B,IAAYyB,EAAS7H,GAAKsG,EAAQ,MAC7C7F,SAzBe0H,EAyBYN,EAAS7H,GAzBR,SAACoI,GACvCd,EAAcc,EAAOD,KAqBb,UAKGN,EAASb,MACTZ,IAAYyB,EAAS7H,GACpB,sBAAMhC,UAAWuE,EAAQ8F,eAAzB,SACa,SAAV/B,EAAmB,oBAAsB,qBAE1C,SAfDuB,EAAS7H,IAjBE,IAACmI,UAmD7B,IAAMG,EAAmBtH,aAAW,SAACC,GAAD,MAAY,CAC9CC,KAAM,CACJqH,YAAatH,EAAMa,QAAQ,GAC3B0G,aAAcvH,EAAMa,QAAQ,IAE9B2G,UACyB,UAAvBxH,EAAMQ,QAAQnD,KACV,CACEH,MAAO8C,EAAMQ,QAAQiH,UAAUC,KAC/BnH,gBAAiBoH,YAAQ3H,EAAMQ,QAAQiH,UAAUG,MAAO,MAE1D,CACE1K,MAAO8C,EAAMQ,QAAQsD,KAAK+D,QAC1BtH,gBAAiBP,EAAMQ,QAAQiH,UAAUK,MAEjD7G,MAAO,CACL8G,KAAM,gBAIJC,EAAuB,SAAC/B,GAC5B,IAAM3E,EAAU+F,IAEdlB,EAKEF,EALFE,YACA8B,EAIEhC,EAJFgC,SACAC,EAGEjC,EAHFiC,YACAC,EAEElC,EAFFkC,cACAC,EACEnC,EADFmC,iBAeF,OACE,eAACC,EAAA,EAAD,CACEtL,UAAWuL,YAAKhH,EAAQrB,KAAT,eACZqB,EAAQkG,UAAYrB,EAAc,IAFvC,UAKGA,EAAc,EACb,eAACoC,EAAA,EAAD,CACExL,UAAWuE,EAAQL,MACnB/D,MAAM,UACN2H,QAAQ,YACR2D,UAAU,MAJZ,UAMGrC,EANH,eASA,cAACoC,EAAA,EAAD,CACExL,UAAWuE,EAAQL,MACnB4D,QAAQ,KACR9F,GAAG,aACHyJ,UAAU,MAJZ,uBAUDrC,EAAc,EACb,cAACzD,EAAA,EAAD,CAAYlD,QAvCA,WAChB,IAAMwE,EAAI,YAAOmE,GAEjBF,EAASrD,SAAQ,SAAC6D,GAChB,IAAMrF,EAASY,EAAKU,WAAU,SAACvB,GAAD,OAAOA,EAAElC,QAAUwH,KACjDzE,EAAKI,OAAOhB,EAAQ,MAGtBgF,EAAiBpE,GACjBkE,EAAY,KA8BwBQ,aAAW,SAA3C,SACE,cAACC,EAAA,EAAD,MAEA,SAaJ7I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ9C,MAAO,MACPyL,OAAQ,OAEVtI,MAAO,CACLnD,MAAO,OACP0L,aAAc7I,EAAMa,QAAQ,IAE9BiI,MAAO,CACLC,SAAU,KAEZ3B,eAAgB,CACd4B,OAAQ,EACRC,KAAM,gBACN7L,OAAQ,EACRwL,QAAS,EACTM,SAAU,SACVtI,QAAS,EACTuI,SAAU,WACVC,IAAK,GACLjM,MAAO,OAII,SAASkM,GAAT,GAA8D,IAApClB,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,iBAChDkB,EAAOnB,EAAc3E,KAAI,SAAC+F,GAAD,OAtNbtI,EAuNLsI,EAAStI,MAvNGuI,EAuNID,EAASC,QAvNJC,EAuNaF,EAAS7H,WAtNjD,CAAET,QAAOuI,UAASC,UAD3B,IAAoBxI,EAAOuI,EAASC,KAyN5BnI,EAAUxB,KAChB,EAA0ByB,IAAM/D,SAAS,OAAzC,mBAAO6H,EAAP,KAAcqE,EAAd,KACA,EAA8BnI,IAAM/D,SAAS,IAA7C,mBAAO2H,EAAP,KAAgBwE,EAAhB,KACA,EAAgCpI,IAAM/D,SAAS,IAA/C,mBAAOyK,EAAP,KAAiBC,EAAjB,KACA,EAAwB3G,IAAM/D,SAAS,GAAvC,mBAAOoM,EAAP,KAAaC,EAAb,KAEMC,EAAqB,SAAC7I,EAAOS,EAAY8H,EAASpI,GACtD,IAAM4C,EAAI,YAAOmE,GACjBnE,EAAK5C,GAAS,CAAEH,QAAOS,aAAY8H,WACnCpB,EAAiBpE,IAkDb+F,EA/Cc,EAgDJC,KAAKC,IAhDD,EAgDkBX,EAAKjK,OAhDvB,EAgDgCuK,GAEpD,OACE,qBAAK7M,UAAWuE,EAAQrB,KAAxB,SACE,eAACiK,EAAA,EAAD,CAAOnN,UAAWuE,EAAQhB,MAA1B,UACE,cAAC,EAAD,CACE6F,YAAa8B,EAAS5I,OACtB4I,SAAUA,EACVC,YAAaA,EACbC,cAAeA,EACfC,iBAAkBA,IAEpB,cAAC+B,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACErN,UAAWuE,EAAQwH,MACnBjG,kBAAgB,aAChBwH,KAAK,QACL3B,aAAW,iBAJb,UAME,cAAC1C,EAAD,CACE1E,QAASA,EACT6E,YAAa8B,EAAS5I,OACtBgG,MAAOA,EACPF,QAASA,EACTe,iBAjEiB,SAACiB,GAC5B,GAAIA,EAAM/D,OAAOQ,QAAjB,CACE,IAAM0G,EAAehB,EAAK9F,KAAI,SAAC+G,GAAD,OAAOA,EAAEtJ,SACvCiH,EAAYoC,QAGdpC,EAAY,KA4DF7B,cAxEc,SAACc,EAAOD,GAEhCwC,EADcvE,IAAY+B,GAAsB,QAAV7B,EACrB,OAAS,OAC1BsE,EAAWzC,IAsEDd,SAAUkD,EAAKjK,SAEjB,eAACmL,EAAA,EAAD,WACGlF,EAAWgE,EAAMlE,EAAcC,EAAOF,IACpCsF,MA9EK,EA8ECb,EA9ED,EA8EqBA,EA9ErB,GA+ELpG,KAAI,SAACkH,EAAKtJ,GACT,IAnCI1C,EAmCEiM,GAnCFjM,EAmC8BgM,EAAIzJ,OAnCG,IAA5BgH,EAAS2C,QAAQlM,IAoCxBmM,EAAO,kCAA8BzJ,GAE3C,OACE,eAACmF,EAAA,EAAD,CACEuE,OAAK,EACLC,KAAK,WACLC,eAAcL,EACdM,UAAW,EAEXhD,SAAU0C,EANZ,UAQE,cAACnE,EAAA,EAAD,CAAW5F,QAAQ,WAAnB,SACE,cAAC6F,EAAA,EAAD,CACEjH,QAAS,SAAC2H,GAAD,OA9Eb,SAACA,EAAOzI,GAC1B,IAAM4E,EAAgB2E,EAAS2C,QAAQlM,GACnCwM,EAAc,IAEK,IAAnB5H,EACF4H,EAAcA,EAAYC,OAAOlD,EAAUvJ,GAChB,IAAlB4E,EACT4H,EAAcA,EAAYC,OAAOlD,EAASwC,MAAM,IACvCnH,IAAkB2E,EAAS5I,OAAS,EAC7C6L,EAAcA,EAAYC,OAAOlD,EAASwC,MAAM,GAAI,IAC3CnH,EAAgB,IACzB4H,EAAcA,EAAYC,OACxBlD,EAASwC,MAAM,EAAGnH,GAClB2E,EAASwC,MAAMnH,EAAgB,KAInC4E,EAAYgD,GA6D8BE,CAAYjE,EAAOuD,EAAIzJ,QAC3C2C,QAAS+G,EACThE,WAAY,CAAE,kBAAmBkE,OAGrC,cAACrE,EAAA,EAAD,CACEgC,UAAU,KACVzJ,GAAI8L,EACJQ,MAAM,MACNzK,QAAQ,OAJV,SAMG8J,EAAIzJ,QAEP,cAACuF,EAAA,EAAD,CAAWK,MAAM,QAAjB,SAA0B6D,EAAIlB,QAAQnK,SACtC,cAACmH,EAAA,EAAD,CAAWK,MAAM,QAAjB,SACkB,UAAf6D,EAAIjB,OAA4C,IAAvBiB,EAAIlB,QAAQnK,OAAe,aAAe,SAAW,aAEjF,cAACmH,EAAA,EAAD,CAAWK,MAAM,QAAjB,SACE,cAAC,EAAD,CAEExJ,KAAK,OACL4D,MAAOyJ,EAAIzJ,MACXC,OAAQwJ,EAAIjB,OACZtI,QAASuJ,EAAIlB,QACbpI,MAAOA,EACPC,kBAAmByI,GANd1I,OAxBJsJ,EAAIzJ,UAoChB8I,EAAY,GACX,cAACxD,EAAA,EAAD,CAAUvJ,MAAO,CAAEI,OAAQ,GAAK2M,GAAhC,SACE,cAACvD,EAAA,EAAD,CAAW8E,QAAS,cAM9B,cAACC,EAAA,EAAD,CACEC,mBAAoB,CAAC,GACrBhD,UAAU,MACViD,MAAOnC,EAAKjK,OACZqM,YAzIY,EA0IZ9B,KAAMA,EACN+B,aAvGiB,SAACxE,EAAOyE,GAC/B/B,EAAQ+B,W,cC3JGC,GA3HI,SAAC,GAOb,IANLtN,EAMI,EANJA,KACAuN,EAKI,EALJA,UACAC,EAII,EAJJA,UAEAC,EAEI,EAFJA,OACAC,EACI,EADJA,eAEA,EAA0CzO,mBAAS,IAAnD,mBAAO2K,EAAP,KAAsBC,EAAtB,KACA,EAA0B5K,mBAAS,IAAnC,mBAAOyD,EAAP,KAAciL,EAAd,KACA,EAA6B1O,oBAAS,GAAtC,mBAAO2O,EAAP,KAAeC,EAAf,KACA,EAA8B5O,mBAAS,QAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,MAAzC,mBAAO6O,EAAP,KAAiBC,EAAjB,KAOAlO,qBAAU,WACJ0N,IACFI,EAASJ,GACT1D,EAAiB2D,GACjBK,EAAWJ,MAEZ,CAACF,EAAWC,EAAWC,IAE1B,IAAMO,EAAU,uCAAG,8BAAAtH,EAAA,yDACXhE,EAAM5B,QAAU8I,EAAc9I,OADnB,uBAEfkE,MAAM,mCAFS,6BAILtC,EAAM5B,OAJD,wBAKfkE,MAAM,0BALS,8BAOL4E,EAAc9I,OAPT,wBAQfkE,MAAM,6BARS,kCAWjB1E,QAAQC,IAAI,2BACZpB,EAAW,SAZM,oBAcM8O,MAAM,gDAAiD,CAC1EC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnB3L,QACAzC,IAAKD,EAAKC,IACVuN,UAAW5D,EACX6D,OAAQG,IAEVU,QAAS,CACP,eAAgB,sBAvBL,eAcTC,EAdS,OA0BfjO,QAAQC,IAAI,kBA1BG,UA2BIgO,EAAOC,OA3BX,QA2BTL,EA3BS,OA4Bf7N,QAAQC,IAAI,eAAgB4N,EAAKM,QACjCV,EAAYI,EAAKM,QA7BF,mDA+BfnO,QAAQC,IAAI,yBAAZ,MACApB,EAAW,SAhCI,2DAAH,qDAmChB,OAAI2O,EACK,cAAC,IAAD,CAAU/M,MAAI,EAACC,GAAE,+BAA0B8M,KAEpC,UAAZ5O,EAA4B,cAAC,EAAD,IAG9B,sBAAKsB,GAAG,YAAR,UACE,sBAAKA,GAAG,mBAAR,UACE,qBAAKhC,UAAU,cAAf,SACE,uBACEM,KAAK,OACLN,UAAU,aACVkG,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAO+I,EAAS/I,EAAEC,OAAOH,QACnClE,GAAG,aACHsE,YAAY,gBACZL,WAAS,EACTiK,aAAa,UAGjB,sBAAKlQ,UAAU,WAAf,UACE,cAAC,EAAD,CAAkBsE,kBArEA,SAACJ,EAAOS,EAAY8H,GAC5C,IAAM/E,EAAG,YAAO0D,GAChB1D,EAAInF,KAAK,CAAE2B,QAAOS,aAAY8H,YAC9BpB,EAAiB3D,MAmEX,sBAAK1H,UAAU,SAAf,UACE,cAACmQ,GAAA,EAAD,CACEtJ,QAASuI,EACTjJ,SAAU,SAACC,GAAD,OAAOiJ,EAAWjJ,EAAEC,OAAOQ,UACrC1G,MAAM,YACNwB,KAAK,WAEP,6BAAKyN,EAAS,SAAW,qBAI/B,qBAAKpP,UAAU,gBAAf,SACE,cAACsM,GAAD,CACElB,cAAeA,EACfC,iBAAkBA,MAGtB,gCACG0D,GACC,wBAAQ/O,UAAU,UAAUyC,QAAS,kBAAMyM,KAA3C,mBAIF,yBAEElP,UAAU,gBACVyC,QAAS,WACHsM,EAAWG,EAAehL,EAAOkH,EAAegE,GAC/CI,KALT,UAQGT,EAAY,QAAU,UARzB,iBC9EOqB,I,OAjCE,WACf,MAA0B3P,mBAAS,SAAnC,mBAAO4P,EAAP,KAAcC,EAAd,KACA,EAAwB7P,mBAAS,IAAjC,mBAAO8P,EAAP,KAAaC,EAAb,KAEMC,EAAiB,WACjBF,EAAKjO,QAAQgO,EAAS,iBAE5B,MAAc,UAAVD,EAA0B,cAAC,IAAD,CAAU9N,MAAI,EAACC,GAAE,WAAM6N,EAAN,YAAeE,KAE5D,qBAAKvO,GAAG,YAAR,SACE,sBAAKA,GAAG,gBAAR,UACE,sBAAKA,GAAG,YAAR,UACE,mBAAG/B,MAAO,CAAEyQ,WAAY,KAAxB,kBADF,SAGA,uBACExK,MAAOqK,EACPpK,SAAU,SAACC,GAAD,OAAOoK,EAAQpK,EAAEC,OAAOH,QAClClE,GAAG,SACH1B,KAAK,OACLgG,YAAY,kBACZL,WAAS,EACT0K,WAAY,SAACvG,GACO,UAAdA,EAAMwG,KAAiBH,OAG/B,wBAAQzQ,UAAU,cAAcyC,QAASgO,EAAzC,8B,kBCWOI,I,MAlCS,SAAC,GAQlB,IAPL3M,EAOI,EAPJA,MACA4M,EAMI,EANJA,UACAP,EAKI,EALJA,KACAvB,EAII,EAJJA,UACAC,EAGI,EAHJA,OACA5K,EAEI,EAFJA,MACA0M,EACI,EADJA,YAEA,OACE,sBAAK/Q,UAAU,YAAf,UACE,gCACE,oBAAIgC,GAAG,qBAAP,SAA6BkC,IAC7B,oBAAGlE,UAAU,YAAb,mBAAgCuQ,QAElC,qBAAKvO,GAAG,oBACR,sBAAKA,GAAG,MAAR,UACE,qBAAKA,GAAG,YAAR,SACE,eAAC,KAAD,CAAMQ,GAAE,qBAAgB+N,GAAQtQ,MAAO,CAAE+Q,WAAY,QAArD,yBACeF,OAGjB,sBAAK9O,GAAG,YAAR,yBAAiCgN,QAEnC,sBAAKhP,UAAU,aAAf,UACGiP,EAAS,qBAAKjN,GAAG,OAAR,kBAA4B,qBAAKA,GAAG,SAAR,oBACtC,cAAC2D,EAAA,EAAD,CAAYlD,QAAS,kBAAMsO,EAAY,CAAC1M,KAAxC,SACE,cAACuB,EAAA,EAAD,cChBKqL,GAdQ,SAAC,GAAiC,IAA/B/M,EAA8B,EAA9BA,MAAOgN,EAAuB,EAAvBA,MAAOlC,EAAgB,EAAhBA,UACtC,OACE,sBAAKhP,UAAU,YAAf,UACE,oBAAIgC,GAAG,qBAAP,SAA6BkC,IAC7B,qBAAKlC,GAAG,oBACR,sBAAKA,GAAG,MAAR,UACE,sBAAKA,GAAG,YAAR,qBAA6BkP,KAC7B,sBAAKlP,GAAG,YAAR,yBAAiCgN,QAEnC,qBAAKhN,GAAG,aC2JCmP,GAhKO,SAAC,GAAc,IAAZ3P,EAAW,EAAXA,KACvB,EAA4Cf,mBAAS,IAArD,mBAAO2Q,EAAP,KAAuBC,EAAvB,KACA,EAAgD5Q,mBAAS,IAAzD,mBAAO6Q,EAAP,KAAyBC,EAAzB,KACA,EAA8B9Q,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAO+Q,EAAP,KAAiBT,EAAjB,KAGA1P,qBAAU,WACHG,EAAKC,IAWND,GAPe,uCAAG,8BAAA0G,EAAA,sEACEuH,MAAM,wCAAD,OAAyCjO,EAAKC,MADrD,cACdgQ,EADc,gBAEGA,EAAQzB,OAFX,QAEd0B,EAFc,QAGPC,aAAaN,EAAkBK,EAASC,aACjDD,EAASE,eAAeL,EAAoBG,EAASE,eACzDjR,GAAW,GALS,2CAAH,oDAOTkR,GAVRlR,GAAW,KAWZ,CAACa,IAEJ,IAAM0N,EAAc,uCAAG,WAAOhL,EAAO8K,EAAWC,GAAzB,eAAA/G,EAAA,sDAChBhE,GAEHvD,GAAW,GACXmB,QAAQgQ,IAAI,CACV7B,OAAQmB,EAAeI,GAAUO,IACjCtQ,IAAKD,EAAKC,IACVyC,QACA8K,YACAC,WAGI+C,EAAiB,CACrBtC,OAAQ,OACRI,QAAS,CAAE,eAAgB,oBAC3BH,KAAMC,KAAKC,UAAU,CACnBI,OAAQmB,EAAeI,GAAUO,IACjCtQ,IAAKD,EAAKC,IACVyC,QACA8K,YACAC,YAGJQ,MAAM,8CAA+CuC,GAClDC,KADH,uCACQ,WAAMC,GAAN,uBAAAhK,EAAA,yDACEiK,EADF,UACWD,EAASpC,QAAQsC,IAAI,uBADhC,aACW,EAAsCC,SAAS,oBAD1D,KAEeF,GAFf,qCAE+BD,EAASlC,OAFxC,6BAEEsC,EAFF,KAKCJ,EAASK,GALV,wBAOIC,EAASF,GAAcA,EAAWG,SAAYP,EAASQ,OAP3D,kBAQKC,QAAQC,OAAOJ,IARpB,QAYF1Q,QAAQgQ,IAAIQ,IACNrL,EAbJ,YAaemK,IACZI,EAAS,IAAItN,MAAQA,EAC1B+C,EAAKuK,EAAS,IAAIxC,UAAYA,EAC9B/H,EAAKuK,EAAS,IAAIvC,OAASA,EAC3BoC,EAAkBpK,GAClB8J,EAAY,IACZpQ,GAAW,GAnBT,4CADR,uDAwBGkS,OAAM,SAAAL,GAEL1Q,QAAQ0Q,MAAM,sBAAuBA,OAhD/BzB,EAAY,IADH,2CAAH,0DAiFpB,OAAIrQ,EAAgB,cAAC,EAAD,IAEhB8Q,EAASlP,OAET,cAAC,GAAD,CACEd,KAAMA,EACNuN,UAAWqC,EAAeI,GAAUtN,MACpC8K,UAAWoC,EAAeI,GAAUxC,UACpCC,OAAQmC,EAAeI,GAAUvC,OACjCC,eAAgBA,IAKpB,sBAAKlP,UAAU,YAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,cACf,0CACA,qBAAKA,UAAU,YAEjB,qBAAKA,UAAU,cAAf,SACGoR,EAAe3K,KAAI,SAACqM,EAAMlC,GAAP,OAClB,cAAC,GAAD,CAEEvM,MAAOuM,EACPG,YAAaA,EACb7M,MAAO4O,EAAK5O,MACZqM,KAAMuC,EAAKf,IACXjB,UAAWgC,EAAKhC,UAChB9B,UAAW8D,EAAK9D,UAAU1M,OAC1B2M,OAAQ6D,EAAK7D,QAPR2B,WAYb,sBAAK5Q,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,cACf,4CACA,qBAAKA,UAAU,YAEjB,qBAAKA,UAAU,cAAf,SACGsR,EAAiB7K,KAAI,SAACqM,EAAMlC,GAAP,OACpB,cAAC,GAAD,CAEE1M,MAAO4O,EAAK5O,MACZgN,MAAO4B,EAAKhC,UAAU,GAAGI,MACzBlC,UAAW8D,EAAKC,gBAHXnC,e,kBCpHJoC,GAlCY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,EAAwBxS,mBAAS,QAAjC,mBAAOyS,EAAP,KAAaC,EAAb,KACA,OACE,qBAAKnR,GAAG,eAAR,SACE,sBAAKA,GAAG,mBAAR,UACE,sBAAKA,GAAG,UAAR,UACE,oBAAIhC,UAAU,IAAd,wCACA,8EAEF,uBACEM,KAAK,OAEL0B,GAAIkR,EACJhN,MAAO+M,EAAMG,OAAO9D,SACpB1I,UAAU,IAGZ,cAAC,mBAAD,CACEG,KAAMkM,EAAMG,OAAO9D,SACnB+D,OAAQ,WACNF,EAAQ,WAHZ,SAME,wBAAQnT,UAAU,gBAAlB,SACY,SAATkT,EAAkB,YAAc,mBAGrC,cAAC,KAAD,CAAM1Q,GAAI,aAAV,SACE,wBAAQxC,UAAU,gBAAlB,+BCfKsT,GAfM,WACnB,OACE,sBAAKtT,UAAU,UAAf,UACE,qDACA,sBAAKgC,GAAG,YAAR,UACE,qCADF,SAGA,wEACwC,cAAC,KAAD,CAAMQ,GAAG,IAAT,wBADxC,wCCLAO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GAGNC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBiQ,UAAW,UAEbhQ,MAAO,CACLC,gBAAiBP,EAAMQ,QAAQC,WAAWH,MAC1CI,UAAWV,EAAMW,QAAQ,GACzBC,QAASZ,EAAMa,QAAQ,GAAI,IAC3B7B,aAAc,QAIhB+B,QAAS,CACPZ,QAAS,OACTE,eAAgB,gBAqCLkQ,GAjCQ,SAAC,GAAuC,IAArCzD,EAAoC,EAApCA,OAAQ0D,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UACtCnP,EAAUxB,KAChB,EAAwBtC,mBAASiT,GAAjC,mBAAOjP,EAAP,KAAaC,EAAb,KAMA,OAJArD,qBAAU,WACRqD,EAAQgP,KACP,CAACA,IAGF,qBAAK1T,UAAWuE,EAAQrB,KAAxB,SACE,cAAC2C,EAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjB/F,UAAWuE,EAAQpB,MACnBsB,KAAMA,EACNuB,qBAAqB,EALvB,SAOE,sBAAKhG,UAAWuE,EAAQhB,MAAxB,UACE,8DACA,oBAAIvD,UAAU,WAAd,SACG+P,EAAOyC,MACJ,mBADH,iBAEazC,EAAOmB,MAFpB,YAE6BuC,KAEhC,cAAC,KAAD,CAAMjR,GAAI,aAAV,SACE,wBAAQxC,UAAU,gBAAlB,iCC0HG2T,GA1KK,SAAC,GAAe,IAC5BrE,EAD2B,EAAZ2D,MACEG,OAAO9D,SAC9B,EAAkC7O,mBAAS,IAA3C,mBAAOuO,EAAP,KAAkB4E,EAAlB,KACA,EAAoDnT,mBAAS,IAA7D,mBAAOoT,EAAP,KAA2BC,EAA3B,KACA,EAAkCrT,mBAAS,IAA3C,mBAAOsO,EAAP,KAAkBgF,EAAlB,KACA,EAA8BtT,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOsP,EAAP,KAAeiE,EAAf,KACA,EAAkCvT,oBAAS,GAA3C,mBAAOiT,EAAP,KAAkBO,EAAlB,KACMxS,EAAMrC,EAASU,OAAO4B,YAAYD,IACxCJ,qBAAU,YACO,uCAAG,gCAAA6G,EAAA,sEACEuH,MAAM,sCAAuC,CAC7DC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEI,OAAQX,EAAU7N,QACzCqO,QAAS,CACP,eAAgB,sBALJ,cACVoE,EADU,gBAQOA,EAAIlE,OARX,OAQV0B,EARU,OAShB/Q,GAAW,GACP+Q,EAASc,MAAOuB,EAAarC,EAASc,QAExCuB,EAAarC,EAASxN,OACtB0P,EAAalC,EAAS1C,WAChB/H,EAAOyK,EAAS1C,UAAUvI,KAAI,SAAC+F,GACnC,MAAO,CACLxK,GAAIwK,EAASxK,GACbkC,MAAOsI,EAAStI,MAChBS,WAAY6H,EAAS7H,WACrBwP,gBAAiB,OAGrBL,EAAsB7M,IAtBR,2CAAH,qDAyBfmN,KACC,CAAC9E,EAAU7N,IAEd,IAAM4S,EAAqB,SAACjO,EAAGM,EAAQrC,GACrC,IAAM4C,EAAI,YAAO4M,GACXpH,EAAUxF,EAAK5C,GAAO8P,gBAM5B,GALArS,QAAQC,IAAI,SAAWsC,IAClBoI,EAAQ4F,SAAS3L,IAAWN,EAAEC,OAAOQ,UACK,UAAzCgN,EAAmBxP,GAAOM,WAAwB8H,EAAQ,GAAK/F,EAC9D+F,EAAQlK,KAAKmE,IAEhB+F,EAAQ4F,SAAS3L,KAAYN,EAAEC,OAAOQ,QAAS,CACjD,IAAMyN,EAAI7H,EAAQoB,QAAQnH,GAC1B+F,EAAQpF,OAAOiN,EAAG,GAEpBrN,EAAK5C,GAAO8P,gBAAkB1H,EAC9BqH,EAAsB7M,IAGlBsN,EAAU,uCAAG,8BAAArM,EAAA,+EAGGuH,MAAM,iCAAkC,CACxDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBpO,MACAwO,OAAQX,EACRN,UAAW6E,IAEb/D,QAAS,CACP,eAAgB,sBAXL,cAGToE,EAHS,gBAcIA,EAAIlE,OAdR,OAcTL,EAdS,OAefqE,EAAUrE,GACVsE,GAAa,GACbnS,QAAQC,IAAI,cAAe4N,GAjBZ,kDAmBf7N,QAAQC,IAAI,wBAAZ,MAnBe,0DAAH,qDAuBhB,OAAIrB,EAAgB,cAAC,EAAD,IAEF,uBAAdqO,EAEA,sBAAK/O,UAAU,UAAf,UACE,qDACA,sBAAKgC,GAAG,YAAR,UACE,qCADF,SAGA,6CACa,cAAC,KAAD,CAAMQ,GAAG,aAAT,wBADb,cAMiB,2BAAduM,EAEL,sBAAK/O,UAAU,UAAf,UACE,yGAIA,sBAAKgC,GAAG,YAAR,UACE,qCADF,SAGA,6CACa,cAAC,KAAD,CAAMQ,GAAG,aAAT,wBADb,cAKiB,+BAAduM,EAEL,sBAAK/O,UAAU,UAAf,UACE,kEACA,sBAAKgC,GAAG,YAAR,UACE,qCADF,SAGA,6CACa,cAAC,KAAD,CAAMQ,GAAG,aAAT,wBADb,cAOF,qBAAKR,GAAG,YAAR,SACE,sBAAKA,GAAG,mBAAR,UACE,qBAAKhC,UAAU,cAAf,SACE,6BAAK+O,MAENC,EAAUvI,KAAI,SAAC+F,EAAUnI,GAAX,OACb,sBAAKrE,UAAU,qBAAf,UACE,qBAAKgC,GAAG,QAAR,SAAiBwK,EAAStI,QAC1B,qBAAKlE,UAAU,aAAf,SACGwM,EAASC,QAAQhG,KAAI,SAACC,EAAQC,GAAT,OACpB,sBAAK3G,UAAU,SAAf,UAC2B,UAAxBwM,EAAS7H,WACR,uBACErE,KAAK,QACLqB,KAAI,gBAAW0C,GACf8B,SAAU,SAACC,GAAD,OACRiO,EAAmBjO,EAAGM,EAAOK,KAAM1C,MAIvC,uBACE/D,KAAK,WACLqB,KAAK,SACLwE,SAAU,SAACC,GAAD,OACRiO,EAAmBjO,EAAGM,EAAOK,KAAM1C,MAIzC,uBAAOrE,UAAU,QAAQC,MAAO,CAAE4D,QAAS,WAA3C,SACG6C,EAAOK,SAnBiBJ,UAJMtC,MA8B3C,wBAAQrE,UAAU,gBAAgByC,QAAS8R,EAA3C,oBAGA,cAAC,GAAD,CACExE,OAAQA,EACR2D,UAAWA,EACXD,WAAYzE,EAAU1M,e,qECpFnBkS,OAvEf,WACC,MAA8B/T,oBAAS,GAAvC,mBAAOgU,EAAP,KAAgBC,EAAhB,KACMC,EAAe,CACpB,CACCzQ,MAAO,YACP9B,KAAM,aACNwS,KAAM,cAACC,GAAA,EAAD,IACNC,MAAO,YAER,CACC5Q,MAAO,YACP9B,KAAM,aACNwS,KAAM,cAACG,GAAA,EAAD,IACND,MAAO,YAER,CACC5Q,MAAO,cACP9B,KAAM,eACNwS,KAAM,cAACI,GAAA,EAAD,IACNF,MAAO,aAGT,EAA8BrU,oBAAS,GAAvC,mBAAOwU,EAAP,KAAgBC,EAAhB,KACMC,EAAc,kBAAMD,GAAYD,IACtC,OAAIR,EAAgB,cAAC,IAAD,CAAUjS,GAAG,MAGhC,gCACC,cAACwE,EAAA,EAAD,CAAMhH,UAAU,YAAYyC,QAAS0S,EAArC,SACC,cAACC,GAAA,EAAD,MAGD,qBAAKpV,UAAWiV,EAAU,kBAAoB,WAA9C,SACC,qBAAIjV,UAAU,iBAAiByC,QAAS0S,EAAxC,UACC,oBAAInV,UAAU,gBAAd,SACC,cAACgH,EAAA,EAAD,UACC,cAACqO,GAAA,EAAD,CAAiBnV,SAAS,cAG3ByU,EAAalO,KAAI,SAAC6O,EAAMjR,GACxB,OACC,oBAAgBrE,UAAU,WAA1B,SACC,eAAC,KAAD,CAAMwC,GAAI8S,EAAKlT,KAAf,UACC,cAAC4E,EAAA,EAAD,UAAOsO,EAAKV,OACZ,sBAAM5U,UAAU,iBAAhB,SAAkCsV,EAAKpR,YAHhCG,MASX,oBAAIrE,UAAU,oBAAd,SACC,yBACCyC,QAAS,WACRX,QAAQC,IAAI,WAEZ3C,EAASU,OAAO2U,UAChBC,GAAW,IALb,UAQC,cAAC1N,EAAA,EAAD,UACC,cAACuO,GAAA,EAAD,MAED,sBAAMvV,UAAU,iBAAhB,SAAkC,0B,mBCnD1BwV,GAnBA,SAAC,GAAuB,IAArBhU,EAAoB,EAApBA,KAAoB,EAAdhB,QACtB,OACE,sBAAKR,UAAU,SAAf,UACE,sBAAKA,UAAU,SAAf,UACE,cAAC,GAAD,IACA,eAAC,KAAD,CAAMwC,GAAG,IAAIxC,UAAU,OAAvB,UACE,qCADF,YAIF,sBAAKA,UAAU,cAAf,UACE,cAACgH,EAAA,EAAD,UACE,cAACyO,GAAA,EAAD,MAEF,4BAAIjU,EAAKG,c,QCTX+T,GAAkBC,cAAW,SAAC1S,GAAD,MAAY,CAC7C2S,KAAM,CACJpS,gBAAiB,UACjBrD,MAAO8C,EAAMQ,QAAQoS,OAAOC,OAE9BnG,KAAM,CACJzP,SAAU,OANUyV,CAQpBlM,KAEEsM,GAAiBJ,cAAW,SAAC1S,GAAD,MAAY,CAC5CC,KAAM,CACJ,qBAAsB,CACpBM,gBAAiBP,EAAMQ,QAAQuS,OAAOjI,WAHrB4H,CAMnBnM,KAMJ,IAAMzG,GAAYC,YAAW,CAC3B+I,MAAO,CACLC,SAAU,KAEZzI,MAAO,CACLtB,aAAc,MAIH,SAASgU,GAAT,GAAwC,IAAdnF,EAAa,EAAbA,UACjCvM,EAAUxB,KACVwJ,EAAOuE,EAAUrK,KAAI,SAACyP,GAAD,MAdpB,CAAEvU,MADX,EAekDuU,GAf5BvU,KACLE,MAD2B,EAAhBA,MACJqP,MADoB,EAATA,OAAnC,SAgBE,OACE,cAAC9D,EAAA,EAAD,CAAgBpN,UAAWuE,EAAQhB,MAAOkI,UAAW0B,IAArD,SACE,eAACE,EAAA,EAAD,CAAOrN,UAAWuE,EAAQwH,MAAOJ,aAAW,mBAA5C,UACE,cAACpC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACkM,GAAD,mBACA,cAACA,GAAD,CAAiB5L,MAAM,SAAvB,2BACA,cAAC4L,GAAD,CAAiB5L,MAAM,QAAvB,wBAGJ,cAAC2D,EAAA,EAAD,UACGlB,EAAK9F,KAAI,SAACkH,GAAD,OACR,eAACoI,GAAD,WACE,cAACL,GAAD,CAAiBjK,UAAU,KAAK6C,MAAM,MAAtC,SACGX,EAAIhM,OAEP,cAAC+T,GAAD,CAAiB5L,MAAM,SAAvB,SAAiC6D,EAAI9L,QACrC,cAAC6T,GAAD,CAAiB5L,MAAM,QAAvB,SAAgC6D,EAAIuD,UALjBvD,EAAIhM,gBCnDrC,IAiCewU,GAjCG,SAAC,GAAe,IAC1BlG,EADyB,EAAZgD,MACEG,OAAO9D,SACtB7N,EAAMrC,EAASU,OAAO4B,YAAYD,IACxC,EAA8BhB,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOqQ,EAAP,KAAkBsF,EAAlB,KAmBA,OAjBA/U,qBAAU,YACU,uCAAG,8BAAA6G,EAAA,sEACDuH,MAAM,2CAA4C,CAClEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEP,SAAUW,EAAQxO,QACzCqO,QAAS,CACP,eAAgB,sBALD,cACboE,EADa,gBAQEA,EAAIlE,OARN,OAQbD,EARa,OASnBjO,QAAQC,IAAIgO,GACZqG,EAAarG,EAAOsG,eACpB1V,GAAW,GAXQ,2CAAH,qDAalB2V,KACC,CAACrG,EAAQxO,IACZK,QAAQC,IAAI+O,GACRpQ,EAAgB,cAAC,EAAD,IAGhB,sBAAKV,UAAU,aAAf,UACE,2CACA,cAACiW,GAAD,CAAgBnF,UAAWA,QCoDpByF,GAlEH,WACV,MAAwB9V,mBAAS,IAAjC,mBAAOe,EAAP,KAAahB,EAAb,KA6BA,OA5BAa,qBAAU,YACY,uCAAG,sBAAA6G,EAAA,0DACjB1G,EAAKC,IADY,oBAGjBrC,EAASU,OAAO4B,YAAY8U,SAASC,iBACrCrX,EAASU,OAAO4B,YAAY8U,SAASE,aAJpB,0CAOTjH,MAAM,8CAA+C,CACzDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBpO,IAAKD,EAAKC,IACVE,KAAMH,EAAKG,KACXE,MAAOL,EAAKK,QAEdiO,QAAS,CACP,eAAgB,sBAfL,OAkBfhO,QAAQC,IAAI,UAlBG,gDAoBfD,QAAQC,IAAI,wBAAZ,MApBe,yDAAH,qDAwBpB4U,KACC,CAACnV,IAGF,qBAAKxB,UAAU,MAAf,SACIZ,EAASU,OAAO4B,YAGhB,qCACE,8BACE,cAAC,GAAD,CAAQF,KAAMA,EAAMhB,QAASA,MAE/B,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoW,OAAK,EAACxU,KAAK,IAAlB,SACE,cAAC,EAAD,CAAkBZ,KAAMA,MAE1B,cAAC,IAAD,CAAOY,KAAK,aAAZ,SACE,cAAC,GAAD,CAAeZ,KAAMA,MAEvB,cAAC,IAAD,CAAOY,KAAK,eAAZ,SACE,cAAC,GAAD,CAAYZ,KAAMA,MAEpB,cAAC,IAAD,CACEY,KAAK,iCACLqJ,UAAWuH,KAEb,cAAC,IAAD,CAAO5Q,KAAK,aAAZ,SACE,cAAC,GAAD,CAAUZ,KAAMA,MAElB,cAAC,IAAD,CAAOY,KAAK,0BAA0BqJ,UAAWkI,KACjD,cAAC,IAAD,CAAOvR,KAAK,uBAAuBqJ,UAAW0K,KAC9C,cAAC,IAAD,CAAO1K,UAAW6H,WAzBtB,cAAC,EAAD,CAAM9S,QAASA,OC9CvBqW,IAASC,OACP,cAAC,KAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,U","file":"static/js/main.13dcfad7.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyC04aheV_N4L4rno3HLaRBxt3qdQHNIVKk\",\r\n  authDomain: \"quizz-app-ngu.firebaseapp.com\",\r\n  projectId: \"quizz-app-ngu\",\r\n  storageBucket: \"quizz-app-ngu.appspot.com\",\r\n  messagingSenderId: \"786706143626\",\r\n  appId: \"1:786706143626:web:93f1e84605afb83d141073\",\r\n  measurementId: \"G-H9HTHQCLVH\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\nfirebase.auth();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./LoadingScreen.css\";\r\n\r\nconst LoadingScreen = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <h1 className=\"blue\" style={{ fontSize: \"5rem\" }}>\r\n        <b>Quiz</b>App\r\n      </h1>\r\n      {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"audio\" /> */}\r\n      <Loader color=\"#29455a\" width={130} height={130} type=\"BallTriangle\" />\r\n      {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"Puff\" /> */}\r\n      {/* <Loader color=\"#29455a\" width={130} height={130} type=\"Bars\" /> */}\r\n      {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"Circles\" /> */}\r\n    </div>\r\n  );\r\n};\r\nexport default LoadingScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport { StyledFirebaseAuth } from \"react-firebaseui\";\r\nimport firebase from \"../../firebase/firebase\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\n\r\nconst Home = ({ setUser }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  var uiConfig = {\r\n    signInflow: \"popup\",\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n    ],\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: () => false,\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      // setIsLoggedIn(!!user)\r\n      if (user && isMounted) {\r\n        setUser({\r\n          uid: firebase.auth().currentUser.uid,\r\n          name: firebase.auth().currentUser.displayName,\r\n          email: firebase.auth().currentUser.email,\r\n        });\r\n        console.log(\"User Logged In\");\r\n      } else {\r\n        console.log(\"User Signed Out\");\r\n        setUser({});\r\n      }\r\n      console.log(\"auth change\");\r\n      if (isMounted) setLoading(false);\r\n    });\r\n    return () => (isMounted = false);\r\n  }, [setUser]);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <LoadingScreen />\r\n      ) : (\r\n        <div id=\"Home\">\r\n          <div id=\"logo\">\r\n            <div id=\"logo-name\">\r\n              <b>Quiz App</b>\r\n            </div>\r\n            <div id=\"description\">\r\n              Now create and join quiz at a single platform.You can create\r\n              trivia quizzes, personality test, polls and survays. Share out\r\n              your quiz with your students with a unique code.\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"login-card\">\r\n            <label className=\"login-label\">\r\n              <b>Q</b>\r\n            </label>\r\n            <StyledFirebaseAuth\r\n              borderRadius=\"40px\"\r\n              uiConfig={uiConfig}\r\n              firebaseAuth={firebase.auth()}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./OneTimeDashboard.css\";\r\n\r\nconst OneTimeDashboard = ({ user }) => {\r\n  const [path, setPath] = useState(\"\");\r\n  // Path Redirection\r\n  const onDashboard = () => setPath(\"/dashboard\");\r\n  const onCreateQuiz = () => setPath(\"/create-quiz\");\r\n  const onJoinQuiz = () => setPath(\"/join-quiz\");\r\n\r\n  if (path.length > 0) return <Redirect push to={path} />;\r\n\r\n  return (\r\n    <div className=\"one-time-dashboard\">\r\n      <div id=\"dashboard-content\">\r\n        <div className=\"dash-btns\">\r\n          <h1 className=\"white\">\r\n            <b>Quiz</b>App\r\n          </h1>\r\n          <button className=\"button one-time-button\" onClick={onDashboard}>\r\n            Dashboard\r\n          </button>\r\n          <button className=\"button one-time-button\" onClick={onCreateQuiz}>\r\n            Create Quiz\r\n          </button>\r\n          <button className=\"button one-time-button\" onClick={onJoinQuiz}>\r\n            Join Quiz\r\n          </button>\r\n        </div>\r\n        <div className=\"blob-svg\">\r\n          <svg\r\n            className=\"blob-1\"\r\n            viewBox=\"0 0 200 200\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fill=\"#D81E5B\"\r\n              d=\"M55.6,-59.6C71.1,-53.2,82.1,-34.8,85.2,-15.3C88.2,4.2,83.3,24.7,73,41.7C62.7,58.6,46.8,72,29.8,75.4C12.7,78.9,-5.7,72.5,-21.3,64.3C-36.8,56.1,-49.6,46,-55.3,33.3C-61,20.6,-59.6,5.2,-56.6,-9.6C-53.6,-24.4,-48.8,-38.4,-39.1,-45.8C-29.4,-53.2,-14.7,-53.8,2.7,-57C20,-60.2,40.1,-65.9,55.6,-59.6Z\"\r\n              transform=\"translate(100 100)\"\r\n            />\r\n          </svg>\r\n\r\n          <svg\r\n            className=\"blob-3\"\r\n            viewBox=\"0 0 200 200\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fill=\"#F7C550\"\r\n              d=\"M37.2,-46.1C50.9,-32.8,66.5,-23.6,68.1,-12.3C69.8,-0.9,57.5,12.6,48.4,27.5C39.3,42.4,33.3,58.7,22.7,62.7C12.1,66.7,-3,58.3,-21.7,54C-40.3,49.6,-62.5,49.2,-72.9,38.5C-83.4,27.8,-82.2,6.8,-75.6,-10.4C-69.1,-27.5,-57.2,-40.7,-43.7,-54C-30.2,-67.3,-15.1,-80.6,-1.7,-78.6C11.8,-76.6,23.5,-59.3,37.2,-46.1Z\"\r\n              transform=\"translate(100 100)\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OneTimeDashboard;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Modal, Icon, IconButton } from \"@material-ui/core\";\r\nimport \"./AddQuestionModal.css\";\r\nimport { DeleteRounded, EditRounded, SaveRounded } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // margin: \"10px\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: 0,\r\n    width: \"90%\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nexport default function AddQuestionModal({\r\n  type = \"add\",\r\n  title = \"\",\r\n  opType = \"radio\",\r\n  opArray,\r\n  index = -1,\r\n // TrueOrFalse = 0,\r\n  addQuestionHandle,\r\n}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [optionType, setOptionType] = useState(\"radio\");\r\n  const [optionsArray, setOptionsArray] = useState([]);\r\n  const [editedOption, setEditedOption] = useState(null);\r\n  const [editOpIndex, setEditOpIndex] = useState(-1);\r\n  const [titleField, setTitleField] = useState(\"\");\r\n  const [trueOrFalse,settrueOrFalse] = useState(0);\r\n  const optionsRef = useRef(null);\r\n  const checkBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setTitleField(title);\r\n      setOptionType(opType);\r\n      if (opArray) setOptionsArray(opArray);\r\n    } else {\r\n      setTitleField(\"\");\r\n      setOptionsArray([]);\r\n      setOptionType(\"radio\");\r\n    }\r\n  }, [open, title, opType, opArray]);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const addQuestionCallBack = () => {\r\n    const tempArr = [...optionsArray];\r\n    \r\n    if(trueOrFalse === 1){\r\n        if( tempArr && tempArr.length > 2){\r\n          alert(\"More Than two Answers for True Or False\")\r\n          return;\r\n        }\r\n      }\r\n\r\n    // }\r\n    //console.log(tempArr)\r\n    if (optionsRef.current.value.length !== 0) {\r\n      // For radio options, set all other options incorrect\r\n      if (optionType === \"radio\" && checkBoxRef.current.checked)\r\n        tempArr.forEach((op) => (op.isCorrect = false));\r\n\r\n      tempArr.push({\r\n        text: optionsRef.current.value,\r\n        isCorrect: checkBoxRef.current.checked,\r\n      });\r\n    }\r\n    // Error Handling\r\n    if (!titleField.length && optionsArray.length < 3) {\r\n      alert(\"Please add Question and atleast 3 options.\");\r\n      return;\r\n    } else if (!titleField.length) {\r\n      alert(\"Please add Question.\");\r\n      return;\r\n    } else if (optionsArray.length < 3) {\r\n      alert(\"Number of Options must be greater than 3.\");\r\n      return;\r\n    }\r\n    const correctOp = optionsArray.filter((op) => op.isCorrect);\r\n    if (correctOp.length < 1) {\r\n      alert(\"No correct option was selected.\");\r\n      return;\r\n    }\r\n    if (index !== -1) addQuestionHandle(titleField, optionType, tempArr, index);\r\n    else addQuestionHandle(titleField, optionType, tempArr);\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const addOption = () => {\r\n    console.log(optionsRef)\r\n    if (optionsRef.current.value.length === 0) return;\r\n\r\n    const arr = [...optionsArray];\r\n    if (\r\n      optionsArray.findIndex((op) => op.text === optionsRef.current.value) !==\r\n      -1\r\n    ) {\r\n      alert(\"Option already exists.\");\r\n      return;\r\n    }\r\n    if (optionType === \"radio\" && checkBoxRef.current.checked)\r\n      // For radio options, set all other options incorrect\r\n      arr.forEach((op) => (op.isCorrect = false));\r\n\r\n    arr.push({\r\n      text: optionsRef.current.value,\r\n      isCorrect: checkBoxRef.current.checked,\r\n    });\r\n    optionsRef.current.value = \"\";\r\n    checkBoxRef.current.checked = false;\r\n    \r\n    setOptionsArray(arr);\r\n  };\r\n  const handleTypeChange = (e) => {\r\n    console.log(e.target.selectedIndex)\r\n    if(e.target.selectedIndex === 2){\r\n       settrueOrFalse(1);\r\n      alert(trueOrFalse)\r\n    }\r\n    setOptionType(e.target.value);\r\n  }\r\n\r\n  const deleteHandler = (ind) => {\r\n    const temp = [...optionsArray];\r\n    temp.splice(ind, 1);\r\n    setOptionsArray(temp);\r\n    setEditOpIndex(-1);\r\n  };\r\n\r\n  const handleEdit = (ind) => {\r\n    if (editOpIndex === -1) {\r\n      setEditOpIndex(ind);\r\n      setEditedOption(optionsArray[ind].text);\r\n    }\r\n  };\r\n\r\n  const saveEdited = () => {\r\n    const temp = [...optionsArray];\r\n    temp[editOpIndex].text = editedOption;\r\n    setOptionsArray(temp);\r\n    setEditOpIndex(-1);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {type === \"add\" ? (\r\n        <button className=\"button\" onClick={handleOpen}>\r\n          Add Question\r\n        </button>\r\n      ) : (\r\n        <IconButton onClick={handleOpen}>\r\n          <EditRounded />\r\n        </IconButton>\r\n      )}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        disableEnforceFocus={true}\r\n      >\r\n        <div className={classes.paper}>\r\n          <div className=\"questionCard\">\r\n            <div id=\"title\">Question:</div>\r\n            <input\r\n              type=\"text\"\r\n              autoFocus\r\n              value={titleField}\r\n              onChange={(e) => setTitleField(e.target.value)}\r\n              className=\"input-text question\"\r\n              placeholder=\"Type Question Here\"\r\n            />\r\n            <select\r\n              id=\"select\"\r\n              placeholder=\"Select\"\r\n              onChange={handleTypeChange}\r\n            >\r\n              <option className=\"selectOp\" value=\"radio\">\r\n                Single Answer\r\n              </option>\r\n              <option className=\"selectOp\" value=\"check\">\r\n                Multiple Answers\r\n              </option>\r\n              <option className=\"selectOp\" value=\"radio\">\r\n                True Or False\r\n              </option>\r\n            </select>\r\n\r\n            <div className=\"option-div\">\r\n              <div className=\"options\" id=\"one-op\">\r\n                {optionsArray.map((option, ind) => (\r\n                  <div className=\"option\" key={ind}>\r\n                    <input\r\n                      type={optionType === \"radio\" ? \"radio\" : \"checkbox\"}\r\n                      disabled={true}\r\n                      className=\"radio-in\"\r\n                      name=\"option\"\r\n                      checked={option.isCorrect}\r\n                    />\r\n                    {editOpIndex === ind ? (\r\n                      <input\r\n                        value={editedOption}\r\n                        onChange={(e) => setEditedOption(e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      <div className=\"add-op\">{option.text}</div>\r\n                    )}\r\n                    {editOpIndex === ind ? (\r\n                      <Icon className=\"save-icon\" onClick={() => saveEdited()}>\r\n                        <SaveRounded />\r\n                      </Icon>\r\n                    ) : (\r\n                      <Icon\r\n                        className=\"edit-icon\"\r\n                        onClick={() => handleEdit(ind)}\r\n                      >\r\n                        <EditRounded />\r\n                      </Icon>\r\n                    )}\r\n                    <Icon\r\n                      className=\"delete-icon\"\r\n                      onClick={() => {\r\n                        deleteHandler(ind);\r\n                      }}\r\n                    >\r\n                      <DeleteRounded />\r\n                    </Icon>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"add-op\">\r\n              <div>\r\n                <input\r\n                  type={optionType === \"radio\" ? \"radio\" : \"checkbox\"}\r\n                  ref={checkBoxRef}\r\n                  className=\"radio-in\"\r\n                  name=\"option\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  ref={optionsRef}\r\n                  className=\"input-text op-text\"\r\n                  placeholder={`Option ${optionsArray.length + 1}`}\r\n                />\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                className=\"add-btn\"\r\n                value=\"+ Add\"\r\n                onClick={addOption}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.buttons}>\r\n            <button className=\"add-btn\" onClick={handleClose}>\r\n              Close\r\n            </button>\r\n            <button\r\n              // disabled={!(optionsArray.length && titleField.length)}\r\n              className=\"button\"\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={addQuestionCallBack}\r\n            >\r\n              {type === \"add\" ? \"Add \" : \"Edit \"}\r\n              Question\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport AddQuestionModal from \"./AddQuestionModal/AddQuestionModal\";\r\n\r\nfunction createData(title, options, choice) {\r\n  return { title, options, choice };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"title\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Question\",\r\n  },\r\n  { id: \"options\", numeric: true, disablePadding: false, label: \"Options\" },\r\n  { id: \"choice\", numeric: true, disablePadding: false, label: \"Choice\" },\r\n  { id: \"edit\", numeric: true, disablePadding: false, label: \"Edit\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {\r\n    numSelected,\r\n    selected,\r\n    setSelected,\r\n    questionArray,\r\n    setQuestionArray,\r\n  } = props;\r\n\r\n  const deleteRow = () => {\r\n    const temp = [...questionArray];\r\n    // Delete the selected rows from QuestionsArray\r\n    selected.forEach((element) => {\r\n      const target = temp.findIndex((e) => e.title === element);\r\n      temp.splice(target, 1);\r\n    });\r\n\r\n    setQuestionArray(temp);\r\n    setSelected([]);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          QUESTIONS\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <IconButton onClick={deleteRow} aria-label=\"delete\">\r\n          <Delete />\r\n        </IconButton>\r\n      ) : null}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  selected: PropTypes.array,\r\n  setSelected: PropTypes.func,\r\n  questionArray: PropTypes.array,\r\n  setQuestionArray: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"95%\",\r\n    margin: \"5px\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function QuestionsTable({ questionArray, setQuestionArray }) {\r\n  const rows = questionArray.map((question) =>\r\n    createData(question.title, question.options, question.optionType)\r\n  );\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const editQuestionHandle = (title, optionType, options, index) => {\r\n    const temp = [...questionArray];\r\n    temp[index] = { title, optionType, options };\r\n    setQuestionArray(temp);\r\n  };\r\n\r\n  const rowsPerPage = 5;\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.title);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  // const handleChangeRowsPerPage = (event) => {\r\n  // \tsetRowsPerPage(parseInt(event.target.value, 10));\r\n  // \tsetPage(0);\r\n  // };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          questionArray={questionArray}\r\n          setQuestionArray={setQuestionArray}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.title);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.title}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          onClick={(event) => handleClick(event, row.title)}\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.title}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.options.length}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {row.choice === \"radio\" ? row.options.length === 2 ? \"True/False\" : \"Single\" : \"Multiple\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <AddQuestionModal\r\n                          key={index}\r\n                          type=\"edit\"\r\n                          title={row.title}\r\n                          opType={row.choice}\r\n                          opArray={row.options}\r\n                          index={index}\r\n                          addQuestionHandle={editQuestionHandle}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          // onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./CreateQuiz.css\";\r\nimport AddQuestionModal from \"../../components/AddQuestionModal/AddQuestionModal\";\r\nimport QuestionsTable from \"../../components/QuestionsTable\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\n\r\nconst CreateQuiz = ({\r\n  user,\r\n  quizTitle,\r\n  questions,\r\n\r\n  isOpen,\r\n  editQuizHandle,\r\n}) => {\r\n  const [questionArray, setQuestionArray] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [access, setAccesss] = useState(true);\r\n  const [loading, setLoading] = useState(\"stop\");\r\n  const [quizCode, setQuizCode] = useState(null);\r\n\r\n  const addQuestionHandle = (title, optionType, options) => {\r\n    const arr = [...questionArray];\r\n    arr.push({ title, optionType, options });\r\n    setQuestionArray(arr);\r\n  };\r\n  useEffect(() => {\r\n    if (quizTitle) {\r\n      setTitle(quizTitle);\r\n      setQuestionArray(questions);\r\n      setAccesss(isOpen);\r\n    }\r\n  }, [quizTitle, questions, isOpen]);\r\n\r\n  const createQuiz = async () => {\r\n    if (!(title.length || questionArray.length)) {\r\n      alert(\"Please add title and questions.\");\r\n      return;\r\n    } else if (!title.length) {\r\n      alert(\"Please add Quiz title.\");\r\n      return;\r\n    } else if (!questionArray.length) {\r\n      alert(\"Please add any questions.\");\r\n      return;\r\n    }\r\n    console.log(\"Quiz Creation Starts...\");\r\n    setLoading(\"start\");\r\n    try {\r\n      const result = await fetch(\"http://23.102.128.226:5000/API/quizzes/create\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          title,\r\n          uid: user.uid,\r\n          questions: questionArray,\r\n          isOpen: access,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      console.log(\"Quiz posted ! \");\r\n      const body = await result.json();\r\n      console.log(\"Quiz Code : \", body.quizId);\r\n      setQuizCode(body.quizId);\r\n    } catch (e) {\r\n      console.log(\"Quiz creation error : \", e);\r\n      setLoading(\"error\");\r\n    }\r\n  };\r\n  if (quizCode)\r\n    return <Redirect push to={`/created-succesfully/${quizCode}`} />;\r\n\r\n  if (loading === \"start\") return <LoadingScreen />;\r\n\r\n  return (\r\n    <div id=\"main-body\">\r\n      <div id=\"create-quiz-body\">\r\n        <div className=\"quiz-header\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            id=\"quiz-title\"\r\n            placeholder=\"Untitled Quiz\"\r\n            autoFocus\r\n            autocomplete=\"off\"\r\n          />\r\n        </div>\r\n        <div className=\"controls\">\r\n          <AddQuestionModal addQuestionHandle={addQuestionHandle} />\r\n          <div className=\"switch\">\r\n            <Switch\r\n              checked={access}\r\n              onChange={(e) => setAccesss(e.target.checked)}\r\n              color=\"secondary\"\r\n              name=\"access\"\r\n            />\r\n            <h4>{access ? \"Public\" : \"Private\"}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"questionTable\">\r\n        <QuestionsTable\r\n          questionArray={questionArray}\r\n          setQuestionArray={setQuestionArray}\r\n        />\r\n      </div>\r\n      <div>\r\n        {quizTitle && (\r\n          <button className=\"add-btn\" onClick={() => editQuizHandle()}>\r\n            Close\r\n          </button>\r\n        )}\r\n        <button\r\n          // disabled={!(title.length && questionArray.length)}\r\n          className=\"button wd-200\"\r\n          onClick={() => {\r\n            if (quizTitle) editQuizHandle(title, questionArray, access);\r\n            else createQuiz();\r\n          }}\r\n        >\r\n          {quizTitle ? \"Save \" : \"Create \"}\r\n          Quiz\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuiz;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./JoinQuiz.css\";\r\n\r\nconst JoinQuiz = () => {\r\n  const [valid, setValid] = useState(\"false\");\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  const handleJoinQuiz = () => {\r\n    if (code.length) setValid(\"attempt-quiz\");\r\n  };\r\n  if (valid !== \"false\") return <Redirect push to={`/${valid}/${code}`} />;\r\n  return (\r\n    <div id=\"join-quiz\">\r\n      <div id=\"join-quiz-div\">\r\n        <div id=\"logo-name\">\r\n          <b style={{ fontweight: 600 }}>Quiz</b>App\r\n        </div>\r\n        <input\r\n          value={code}\r\n          onChange={(e) => setCode(e.target.value)}\r\n          id=\"q-code\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Quiz Code\"\r\n          autoFocus\r\n          onKeyPress={(event) => {\r\n            if (event.key === \"Enter\") handleJoinQuiz();\r\n          }}\r\n        />\r\n        <button className=\"join-button\" onClick={handleJoinQuiz}>\r\n          Join Quiz\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinQuiz;\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport { EditRounded } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./QuizCard.css\";\r\n\r\nconst CreatedQuizCard = ({\r\n  title,\r\n  responses,\r\n  code,\r\n  questions,\r\n  isOpen,\r\n  index,\r\n  setEditQuiz,\r\n}) => {\r\n  return (\r\n    <div className=\"quiz-card\">\r\n      <div>\r\n        <h1 id=\"created-quiz-title\">{title}</h1>\r\n        <p className=\"card-code\">Code: {code}</p>\r\n      </div>\r\n      <div id=\"horizontal-line\"></div>\r\n      <div id=\"row\">\r\n        <div id=\"responses\">\r\n          <Link to={`/responses/${code}`} style={{ fontWeight: \"bold\" }}>\r\n            Responses : {responses}\r\n          </Link>\r\n        </div>\r\n        <div id=\"questions\">Questions : {questions}</div>\r\n      </div>\r\n      <div className=\"bottom-bar\">\r\n        {isOpen ? <div id=\"open\">open</div> : <div id=\"closed\">closed</div>}\r\n        <IconButton onClick={() => setEditQuiz([index])}>\r\n          <EditRounded />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatedQuizCard;\r\n","import React from \"react\";\r\nimport \"./QuizCard.css\";\r\n\r\nconst JoinedQuizCard = ({ title, score, questions }) => {\r\n  return (\r\n    <div className=\"quiz-card\">\r\n      <h1 id=\"created-quiz-title\">{title}</h1>\r\n      <div id=\"horizontal-line\"></div>\r\n      <div id=\"row\">\r\n        <div id=\"responses\">Score : {score}</div>\r\n        <div id=\"questions\">Questions : {questions}</div>\r\n      </div>\r\n      <div id=\"open\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinedQuizCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./UserDashBoard.css\";\r\nimport CreatedQuizCard from \"../../components/QuizCard/CreatedQuizCard\";\r\nimport JoinedQuizCard from \"../../components/QuizCard/JoinedQuizCard\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\nimport CreateQuiz from \"../CreateQuiz/CreateQuiz\";\r\n\r\nconst UserDashboard = ({ user }) => {\r\n  const [createdQuizzes, setCreatedQuizzes] = useState([]);\r\n  const [attemptedQuizzes, setAttemptedQuizzes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editQuiz, setEditQuiz] = useState([]);\r\n \r\n  // Fetch Data from the API\r\n  useEffect(() => {\r\n    if (!user.uid) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    const fetchQuizData = async () => {\r\n      const results = await fetch(`http://23.102.128.226:5000/api/users/${user.uid}`);\r\n      const quizData = await results.json();\r\n      if (quizData.createdQuiz) setCreatedQuizzes(quizData.createdQuiz);\r\n      if (quizData.attemptedQuiz) setAttemptedQuizzes(quizData.attemptedQuiz);\r\n      setLoading(false);\r\n    };\r\n    if (user) fetchQuizData();\r\n  }, [user]);\r\n\r\n  const editQuizHandle = async (title, questions, isOpen) => {\r\n    if (!title) setEditQuiz([]);\r\n    else {\r\n      setLoading(true);\r\n      console.dir({\r\n        quizId: createdQuizzes[editQuiz]._id,\r\n        uid: user.uid,\r\n        title,\r\n        questions,\r\n        isOpen,\r\n      });\r\n\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          quizId: createdQuizzes[editQuiz]._id,\r\n          uid: user.uid,\r\n          title,\r\n          questions,\r\n          isOpen,\r\n        }),\r\n      };\r\n      fetch('http://23.102.128.226:5000/API/quizzes/edit', requestOptions)\r\n        .then(async response => {\r\n          const isJson = response.headers.get('content-type')?.includes('application/json');\r\n          const submitData = isJson && await response.json();\r\n\r\n          // check for error response\r\n          if (!response.ok) {\r\n            // get error message from body or default to response status\r\n            const error = (submitData && submitData.message) || response.status;\r\n            return Promise.reject(error);\r\n          }\r\n          else {\r\n           // const submitData = await results.json();\r\n            console.dir(submitData);\r\n            const temp = [...createdQuizzes];\r\n            temp[editQuiz[0]].title = title;\r\n            temp[editQuiz[0]].questions = questions;\r\n            temp[editQuiz[0]].isOpen = isOpen;\r\n            setCreatedQuizzes(temp);\r\n            setEditQuiz([]);\r\n            setLoading(false);\r\n\r\n          }\r\n        })\r\n        .catch(error => {\r\n       //   this.setState({ errorMessage: error });\r\n          console.error('There was an error!', error);\r\n        });\r\n\r\n\r\n      // const results = await fetch(\"http://23.102.128.226:4000/API/quizzes/edit\", {\r\n      //   method: \"POST\",\r\n      //   body: JSON.stringify({\r\n      //     quizId: createdQuizzes[editQuiz]._id,\r\n      //     uid: user.uid,\r\n      //     title,\r\n      //     questions,\r\n      //     isOpen,\r\n      //   }),\r\n\r\n      // });\r\n      // if (results && results.statusText === \"OK\" && results.status === 200) {\r\n      //   const submitData = await results.json();\r\n      //   console.dir(submitData);\r\n      //   const temp = [...createdQuizzes];\r\n      //   temp[editQuiz[0]].title = title;\r\n      //   temp[editQuiz[0]].questions = questions;\r\n      //   temp[editQuiz[0]].isOpen = isOpen;\r\n      //   setCreatedQuizzes(temp);\r\n      //   setEditQuiz([]);\r\n      //   setLoading(false);\r\n      // }\r\n      // else {\r\n      //   console.error()\r\n      // }\r\n    }\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n\r\n  if (editQuiz.length) {\r\n    return (\r\n      <CreateQuiz\r\n        user={user}\r\n        quizTitle={createdQuizzes[editQuiz].title}\r\n        questions={createdQuizzes[editQuiz].questions}\r\n        isOpen={createdQuizzes[editQuiz].isOpen}\r\n        editQuizHandle={editQuizHandle}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"dash-body\">\r\n      <div className=\"quizzes\">\r\n        <div className=\"heading\">\r\n          <div className=\"line-left\" />\r\n          <h2>Created </h2>\r\n          <div className=\"line\" />\r\n        </div>\r\n        <div className=\"card-holder\">\r\n          {createdQuizzes.map((quiz, key) => (\r\n            <CreatedQuizCard\r\n              key={key}\r\n              index={key}\r\n              setEditQuiz={setEditQuiz}\r\n              title={quiz.title}\r\n              code={quiz._id}\r\n              responses={quiz.responses}\r\n              questions={quiz.questions.length}\r\n              isOpen={quiz.isOpen}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"quizzes\">\r\n        <div className=\"heading\">\r\n          <div className=\"line-left\" />\r\n          <h2>Attempted </h2>\r\n          <div className=\"line\" />\r\n        </div>\r\n        <div className=\"card-holder\">\r\n          {attemptedQuizzes.map((quiz, key) => (\r\n            <JoinedQuizCard\r\n              key={key}\r\n              title={quiz.title}\r\n              score={quiz.responses[0].score}\r\n              questions={quiz.totalQuestions}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./CreatedSuccesfully.css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst CreatedSuccesfully = ({ match }) => {\r\n  const [Copy, setCopy] = useState(\"copy\");\r\n  return (\r\n    <div id=\"created-quiz\">\r\n      <div id=\"created-quiz-div\">\r\n        <div id=\"message\">\r\n          <h2 className=\"b\">Quiz Created Successfully!</h2>\r\n          <p>Share the follwong code with your students</p>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          // className='input-text'\r\n          id={Copy}\r\n          value={match.params.quizCode}\r\n          disabled={true}\r\n          // onChange={(e) => {}}\r\n        />\r\n        <CopyToClipboard\r\n          text={match.params.quizCode}\r\n          onCopy={() => {\r\n            setCopy(\"copied\");\r\n          }}\r\n        >\r\n          <button className=\"button wd-200\">\r\n            {Copy === \"copy\" ? \"Copy Code\" : \"Code Copied!\"}\r\n          </button>\r\n        </CopyToClipboard>\r\n        <Link to={\"/dashboard\"}>\r\n          <button className=\"button wd-200\">Dashboard</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreatedSuccesfully;\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <h1>404 Page Not Found!</h1>\r\n      <div id=\"logo-name\">\r\n        <b>Quiz</b>App\r\n      </div>\r\n      <h3>\r\n        Who told you to mess up with the URL? <Link to=\"/\">Click here</Link> and\r\n        Go back to the Dashboard.\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // margin: \"10px\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(10, 10),\r\n    borderRadius: \"20px\",\r\n    // display:\"flex\",\r\n    // alignItems:\"center\",\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst AttemptedModal = ({ result, totalScore, showModal }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(showModal);\r\n\r\n  useEffect(() => {\r\n    setOpen(showModal);\r\n  }, [showModal]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        disableEnforceFocus={true}\r\n      >\r\n        <div className={classes.paper}>\r\n          <h2>Quiz Attempted Successfully.</h2>\r\n          <h1 className=\"score_h2\">\r\n            {result.error\r\n              ? \"Not Submitted ! \"\r\n              : `Score: ${result.score}/${totalScore}`}\r\n          </h1>\r\n          <Link to={\"/dashboard\"}>\r\n            <button className=\"button wd-200\">Dashboard</button>\r\n          </Link>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttemptedModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"../../firebase/firebase\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\nimport AttemptedModal from \"./AttemptedModal\";\r\n\r\nconst AttemptQuiz = ({ match }) => {\r\n  const quizCode = match.params.quizCode;\r\n  const [questions, setQuestions] = useState([]);\r\n  const [attemptedQuestions, setAttemptedQuestions] = useState([]);\r\n  const [quizTitle, setQuizTitle] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [result, setResult] = useState({});\r\n  const [showModal, setShowModal] = useState(false);\r\n  const uid = firebase.auth().currentUser.uid;\r\n  useEffect(() => {\r\n    const fetchQuiz = async () => {\r\n      const res = await fetch(\"http://23.102.128.226:5000/api/join\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ quizId: quizCode, uid }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const quizData = await res.json();\r\n      setLoading(false);\r\n      if (quizData.error) setQuizTitle(quizData.error);\r\n      else {\r\n        setQuizTitle(quizData.title);\r\n        setQuestions(quizData.questions);\r\n        const temp = quizData.questions.map((question) => {\r\n          return {\r\n            id: question.id,\r\n            title: question.title,\r\n            optionType: question.optionType,\r\n            selectedOptions: [],\r\n          };\r\n        });\r\n        setAttemptedQuestions(temp);\r\n      }\r\n    };\r\n    fetchQuiz();\r\n  }, [quizCode, uid]);\r\n\r\n  const handleOptionSelect = (e, option, index) => {\r\n    const temp = [...attemptedQuestions];\r\n    const options = temp[index].selectedOptions;\r\n    console.log(\"index:\" + index);\r\n    if (!options.includes(option) && e.target.checked) {\r\n      if (attemptedQuestions[index].optionType === \"radio\") options[0] = option;\r\n      else options.push(option);\r\n    }\r\n    if (options.includes(option) && !e.target.checked) {\r\n      const i = options.indexOf(option);\r\n      options.splice(i, 1);\r\n    }\r\n    temp[index].selectedOptions = options;\r\n    setAttemptedQuestions(temp);\r\n  };\r\n\r\n  const submitQuiz = async () => {\r\n    // send attemped Questions to backend\r\n    try {\r\n      const res = await fetch(\"23.102.128.226:5000/API/submit\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          uid,\r\n          quizId: quizCode,\r\n          questions: attemptedQuestions,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const body = await res.json();\r\n      setResult(body);\r\n      setShowModal(true);\r\n      console.log(\"res body : \", body);\r\n    } catch (e) {\r\n      console.log(\"Error Submitting quiz\", e);\r\n    }\r\n  };\r\n\r\n  if (loading) return <LoadingScreen />;\r\n  // For Quiz not Found\r\n  if (quizTitle === \"ERR:QUIZ_NOT_FOUND\")\r\n    return (\r\n      <div className=\"loading\">\r\n        <h1>404 Quiz Not Found!</h1>\r\n        <div id=\"logo-name\">\r\n          <b>Quiz</b>App\r\n        </div>\r\n        <h3>\r\n          Go back to <Link to=\"/join-quiz\">Join Quiz </Link>Page.\r\n        </h3>\r\n      </div>\r\n    );\r\n  // For Quiz not accessible\r\n  else if (quizTitle === \"ERR:QUIZ_ACCESS_DENIED\")\r\n    return (\r\n      <div className=\"loading\">\r\n        <h2>\r\n          Quiz Access is Not Granted by the Creator. Please contact Quiz\r\n          Creator.\r\n        </h2>\r\n        <div id=\"logo-name\">\r\n          <b>Quiz</b>App\r\n        </div>\r\n        <h3>\r\n          Go back to <Link to=\"/join-quiz\">Join Quiz </Link>Page.\r\n        </h3>\r\n      </div>\r\n    );\r\n  else if (quizTitle === \"ERR:QUIZ_ALREADY_ATTEMPTED\")\r\n    return (\r\n      <div className=\"loading\">\r\n        <h2>You have already taken the Quiz.</h2>\r\n        <div id=\"logo-name\">\r\n          <b>Quiz</b>App\r\n        </div>\r\n        <h3>\r\n          Go back to <Link to=\"/join-quiz\">Join Quiz </Link>Page.\r\n        </h3>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div id=\"main-body\">\r\n        <div id=\"create-quiz-body\">\r\n          <div className=\"quiz-header\">\r\n            <h2>{quizTitle}</h2>\r\n          </div>\r\n          {questions.map((question, index) => (\r\n            <div className=\"attempQuestionCard\" key={index}>\r\n              <div id=\"title\">{question.title}</div>\r\n              <div className=\"option-div\">\r\n                {question.options.map((option, ind) => (\r\n                  <div className=\"option\" key={ind}>\r\n                    {question.optionType === \"radio\" ? (\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`option${index}`}\r\n                        onChange={(e) =>\r\n                          handleOptionSelect(e, option.text, index)\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"option\"\r\n                        onChange={(e) =>\r\n                          handleOptionSelect(e, option.text, index)\r\n                        }\r\n                      />\r\n                    )}\r\n                    <label className=\"label\" style={{ padding: \"0px 5px\" }}>\r\n                      {option.text}\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <button className=\"button wd-200\" onClick={submitQuiz}>\r\n            Submit\r\n          </button>\r\n          <AttemptedModal\r\n            result={result}\r\n            showModal={showModal}\r\n            totalScore={questions.length}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default AttemptQuiz;\r\n","import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport './Sidebar.css'\r\nimport firebase from '../../firebase/firebase'\r\nimport { Icon } from '@material-ui/core'\r\nimport {\r\n\tCreateNewFolder,\r\n\tDashboard,\r\n\tExitToApp,\r\n\tMeetingRoom,\r\n\tMenuOpenRounded,\r\n\tMenuRounded,\r\n} from '@material-ui/icons'\r\n\r\nfunction Sidebar() {\r\n\tconst [signOut, setSignOut] = useState(false)\r\n\tconst SidedbarData = [\r\n\t\t{\r\n\t\t\ttitle: 'Dashboard',\r\n\t\t\tpath: '/dashboard',\r\n\t\t\ticon: <Dashboard />,\r\n\t\t\tCName: 'nav-text',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Join Quiz',\r\n\t\t\tpath: '/join-quiz',\r\n\t\t\ticon: <MeetingRoom />,\r\n\t\t\tCName: 'nav-text',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Create Quiz',\r\n\t\t\tpath: '/create-quiz',\r\n\t\t\ticon: <CreateNewFolder />,\r\n\t\t\tCName: 'nav-text',\r\n\t\t},\r\n\t]\r\n\tconst [sidebar, setSidebar] = useState(false)\r\n\tconst showSidebar = () => setSidebar(!sidebar)\r\n\tif (signOut) return <Redirect to='/' />\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Icon className='menu-bars' onClick={showSidebar}>\r\n\t\t\t\t<MenuRounded />\r\n\t\t\t</Icon>\r\n\t\t\t{/* <FaIcons.FaBars  onClick={} /> */}\r\n\t\t\t<nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n\t\t\t\t<ul className='nav-menu-items' onClick={showSidebar}>\r\n\t\t\t\t\t<li className='navbar-toggle'>\r\n\t\t\t\t\t\t<Icon>\r\n\t\t\t\t\t\t\t<MenuOpenRounded fontSize='large' />\r\n\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{SidedbarData.map((item, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={index} className='nav-text'>\r\n\t\t\t\t\t\t\t\t<Link to={item.path}>\r\n\t\t\t\t\t\t\t\t\t<Icon>{item.icon}</Icon>\r\n\t\t\t\t\t\t\t\t\t<span className='nav-item-title'>{item.title}</span>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{/* Sign Out Button */}\r\n\t\t\t\t\t<li className='nav-text sign-out'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tconsole.log('clicked')\r\n\t\t\t\t\t\t\t\t// setUser({})\r\n\t\t\t\t\t\t\t\tfirebase.auth().signOut()\r\n\t\t\t\t\t\t\t\tsetSignOut(true)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Icon>\r\n\t\t\t\t\t\t\t\t<ExitToApp />\r\n\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t<span className='nav-item-title'>{'SignOut'}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Sidebar\r\n","import React from \"react\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport \"./Appbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nconst Appbar = ({ user, setUser }) => {\r\n  return (\r\n    <div className=\"appbar\">\r\n      <div className=\"slider\">\r\n        <Sidebar />\r\n        <Link to=\"/\" className=\"home\">\r\n          <b>Quiz</b>App\r\n        </Link>\r\n      </div>\r\n      <div className=\"appbar-user\">\r\n        <Icon>\r\n          <AccountCircle />\r\n        </Icon>\r\n        <p>{user.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appbar;\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#d81e5b\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData({ name, email, score }) {\r\n  return { name, email, score };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  paper: {\r\n    borderRadius: 15,\r\n  },\r\n});\r\n\r\nexport default function ResponsesTable({ responses }) {\r\n  const classes = useStyles();\r\n  const rows = responses.map((resp) => createData(resp));\r\n  return (\r\n    <TableContainer className={classes.paper} component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Name</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Email Address</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Score</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\">{row.email}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.score}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen\";\r\nimport firebase from \"../../firebase/firebase\";\r\nimport ResponsesTable from \"../../components/ResponsesTable\";\r\n\r\nconst Responses = ({ match }) => {\r\n  const quizId = match.params.quizCode;\r\n  const uid = firebase.auth().currentUser.uid;\r\n  const [loading, setLoading] = useState(true);\r\n  const [responses, setResponses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getResponses = async () => {\r\n      const res = await fetch(\"http://23.102.128.226:5000/api/responses\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ quizCode: quizId, uid }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const result = await res.json();\r\n      console.log(result);\r\n      setResponses(result.finalResponse);\r\n      setLoading(false);\r\n    };\r\n    getResponses();\r\n  }, [quizId, uid]);\r\n  console.log(responses);\r\n  if (loading) return <LoadingScreen />;\r\n  else\r\n    return (\r\n      <div className=\"margin-top\">\r\n        <h2>Responses</h2>\r\n        <ResponsesTable responses={responses} />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Responses;\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport firebase from \"./firebase/firebase\";\r\n\r\n// Stylesheet\r\nimport \"./App.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n// Components\r\nimport Home from \"./screens/Home/Home\";\r\nimport OneTimeDashBoard from \"./screens/OneTimeDashboard/OneTimeDashboard\";\r\nimport CreateQuiz from \"./screens/CreateQuiz/CreateQuiz\";\r\nimport JoinQuiz from \"./screens/JoinQuiz/JoinQuiz\";\r\nimport UserDashboard from \"./screens/UserDashboard/UserDashboard\";\r\nimport CreatedSuccesfully from \"./screens/CreatedSuccesfully/CreatedSuccesfully\";\r\nimport NotFoundPage from \"./screens/NotFoundPage\";\r\nimport AttemptQuiz from \"./screens/Attempted/AttemptQuiz\";\r\nimport Appbar from \"./components/Appbar/Appbar\";\r\nimport Responses from \"./screens/Response/Responses\";\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState({});\r\n  useEffect(() => {\r\n    const createUserInDB = async () => {\r\n      if (user.uid)\r\n        if (\r\n          firebase.auth().currentUser.metadata.lastSignInTime ===\r\n          firebase.auth().currentUser.metadata.creationTime\r\n        ) {\r\n          try {\r\n            await fetch(\"http://23.102.128.226:5000/api/users/create\", {\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                uid: user.uid,\r\n                name: user.name,\r\n                email: user.email,\r\n              }),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            });\r\n            console.log(\"posted\");\r\n          } catch (error) {\r\n            console.log(\"User Creation Error: \", error);\r\n          }\r\n        }\r\n    };\r\n    createUserInDB();\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!firebase.auth().currentUser ? (\r\n        <Home setUser={setUser} />\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <Appbar user={user} setUser={setUser} />\r\n          </div>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <OneTimeDashBoard user={user} />\r\n            </Route>\r\n            <Route path=\"/dashboard\">\r\n              <UserDashboard user={user} />\r\n            </Route>\r\n            <Route path=\"/create-quiz\">\r\n              <CreateQuiz user={user} />\r\n            </Route>\r\n            <Route\r\n              path=\"/created-succesfully/:quizCode\"\r\n              component={CreatedSuccesfully}\r\n            />\r\n            <Route path=\"/join-quiz\">\r\n              <JoinQuiz user={user} />\r\n            </Route>\r\n            <Route path=\"/attempt-quiz/:quizCode\" component={AttemptQuiz} />\r\n            <Route path=\"/responses/:quizCode\" component={Responses} />\r\n            <Route component={NotFoundPage} />\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}